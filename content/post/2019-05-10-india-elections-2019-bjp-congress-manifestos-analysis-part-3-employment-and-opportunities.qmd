---
title: 'India Elections 2019: BJP & Congress Manifestos'' Analysis - Part 3 Employment
  and Opportunities'
author: Aditya Mangal
date: '2019-05-10'
slug: india-elections-2019-bjp-congress-manifestos-analysis-part-3-employment-and-opportunities
categories:
  - Projects
tags:
  - DataAnalysis
  - DataScience
  - India
  - Python
  - R
  - SentimentAnalysis
  - TextMining
  - Visualizations
keywords:
  - tech
summary: With India's 2019 General Elections around the corner, I thought it'd be
  a good idea to analyse the election manifestos of its 2 biggest political parties,
  BJP and Congress. In this part 3, I'll explore the Employment and opportunities discussions in
  both manifestos.
readingtime: '10'
draft: no
coverImage: https://lh3.googleusercontent.com/6CZaM8l5GYkmYiKKAQYnu0sbarilrwyz6EfPgWBXjP5O6zIKGlDiwvM95rVhoUWmjoZ_XTcwSBKzML2KvxPQogPSns4I3kgwJvFClsWXMKYbrus-MKfs-WBuGS5L2dTDfPfs3FCWxIg_KsNGzOy3o2L2CvYm5V9febf1sE7zuFAOQnw_opKwPD_eZt9HXngnekY8lUPDBS29RRvHy-owtj1B6nmNwDl2UmtxnOc5SHyr1uvi_vrU7p6sFv408ukkObRysUcT6_jnCvnS_ANLC5CQhg2MULdr-6zclDLRR68xF6UrCeSZv-8O7QFdLySsDhhxDgaHdRi5pH1h0ZoOBFuajcK-7-2nfz6i9tJKnWtXCEZFm_LKOFDNalGmffEesVa_L41I06DbGLQK5Hpl7QCTW6V5FVq8RdF8Kdmy0ozsgnBqQhRkA61JmPXDjnPqWBwiy_3rS0VLo_hsZNj0T2ASsptKcmNgn9900kSj1snl442UTzlQebGwvhiaEdv2En-y3L-Fhe_Fcb0y16rHqf0FGVroQ5MRxkffdjCDt8sLqNMBQ_5g6tgclokYxF0G6RGgNuTt2PzHVK4zvQLp9RQFUReX7I5Vva4R_cOXWCxM0u95rhDiwSAeE-bNyPE5ygiD1OmhaD8IAH2t6uM2X_OHUJZEGrBfaPbQtoZaNwiSQqljzdBpK7bq5Y3lRE3p1ve9iHioa48ZGufs1Aa3Qbkdog=w2748-h1832-no
thumbnailImage: https://lh3.googleusercontent.com/63rXibBvOYO9QbyKunEkNnDmFBAJm_mdO8KtRiWBC6klkT9IvurEugPhRzlFqd0nU8sSUjGkCXLPUqd3g0gJD5CnpxEj4oA_uEg9XrA575XYA05SvUU3zsLGV6jDIi5q7bFjv7br8mTn177YXJgQHrfq7pQqcJ9iOk1QkaSs_rXYTsxEQXVran2HzAavxJ9gYtzCJCM97-ZTXtqVjVCWwY5p4cMwzO_yfogmEJiUJiYc57sAetbM-ntNwksiVO8som6LvJBe7iaAzm21tLBs-z26MtB2epR8sWoHe7RdGw3Yf61vbVHkyxhb36e1CKSzvhj8OQ6oZo_cJcxs3MZKuIZGS8V198G88qfXq0miNpQv2prgqDtgC6cBTQ3fLBfEl2vhYbgmzBZIRMgzaLBgNn1YhAQiWI9pTjEUfD_TQ0bFkmMQQxyc3n5bUphMdlFKR18bGIPnUnXgwqwOwgkX2hJoy-9bm6XcSQ27tUSdL4iQh6-vOo1KV_YVIDhpKbbmBuBT_jH4QPaFspjMq2Dop4qu9m9ytDZMkH4jeN_bYN9JwD-sjovcGPIQFQ4UvkS7JJ6ON24Kmtp9SLCzflCDA9mtMFv2DZx2Myfl0s5eMyuZ3XE0TjgSF67vgAoTD5FmoTrgezkVOSj5diilxesRmbqexIhUUrvMbSRwSjMTpZAh2RiEVQuAqQkUBLAesBCwV4LMyn-HCPfXqf5VF9cXnBzXlA=w750-h500-no
thumbnailImagePosition: left
comments: yes
coverCaption: Photo by Annie Spratt on Unsplash
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE,error = FALSE)
```


# Introduction

With India's 2019 General Elections around the corner, I thought it'd be a good idea to analyse the election manifestos of its 2 biggest political parties, BJP and Congress. Let's use text mining to understand what each party promises and prioritizes.  
In this part 3, I'll explore the Employment and opportunities discussions in both manifestos.

# Analysis  

## Load libraries

```{r}
rm(list = ls())
library(tidyverse)
library(pdftools)
library(tidylog)
library(hunspell)
library(tidytext)
library(ggplot2)
library(gridExtra)
library(scales)
library(reticulate)
library(widyr)
library(igraph)
library(ggraph)

theme_set(theme_light())
use_condaenv("stanford-nlp")
```

## Read cleaned data

```{r}
bjp_content <- read_csv("../data/indian_election_2019/bjp_manifesto_clean.csv")
congress_content <- read_csv("../data/indian_election_2019/congress_manifesto_clean.csv")
```


## Employment and Opportunities

This topic is covered congress' manifesto from Pages 6 to 8 of the pdf and in that of bjp's from pages 20 to 22 and 27 to 28. 

```{r}
bjp_content %>% 
  filter(between(page, 20, 22) | between(page, 27, 28)) -> bjp_content

congress_content %>% 
  filter(between(page, 6, 8)) -> congress_content
```

## Most Popular Words

```{r}
plot_most_popular_words <- function(df, 
                                    min_count = 15,
                                    stop_words_list = stop_words) {
  df %>% 
    unnest_tokens(word, text) %>% 
    anti_join(stop_words_list) %>% 
    mutate(word = str_extract(word, "[a-z']+")) %>%
    filter(!is.na(word)) %>% 
    count(word, sort = TRUE) %>% 
    filter(str_length(word) > 1,
           n > min_count) %>% 
    mutate(word = reorder(word, n)) %>%
    ggplot( aes(x=word, y=n)) +
    geom_segment( aes(x=word, xend=word, y=0, yend=n), color="skyblue", size=1) +
    geom_point( color="blue", size=4, alpha=0.6) +
    coord_flip() + 
    theme(panel.grid.minor.y = element_blank(),
          panel.grid.major.y = element_blank(),
          legend.position="none") -> p
  
  return(p)
}
```

```{r}
custom_stop_words <- bind_rows(tibble(word = c("india", "country", "bjp", "congress", "government"), 
                                          lexicon = rep("custom", 5)), 
                               stop_words)
```


```{r fig.width=14}
bjp_content %>% 
  plot_most_popular_words(min_count = 6,
                          stop_words_list = custom_stop_words) + 
  labs(x = "",
       y = "Number of Occurences",
       title = "Most popular words related to Employment and Opportunities in BJP's Manifesto",
       subtitle = "Words occurring more than 6 times",
       caption = "Based on election 2019 manifesto from bjp.org") -> p_bjp

congress_content %>% 
  plot_most_popular_words(min_count = 7,
                          stop_words_list = custom_stop_words) + 
  labs(x = "",
       y = "Number of Occurences",
       title = "Most popular words related to Employment and Opportunities in Congress' Manifesto",
       subtitle = "Words occurring more than 7 times",
       caption = "Based on election 2019 manifesto from inc.in") -> p_congress

grid.arrange(p_bjp, p_congress, ncol = 2, widths = c(10,10))
```

## Common correlated words

```{r}
plot_common_correlated_words <- function(df,
                                         counts_quantile = 0.7,
                                         correlation_threshold = 0.25,
                                         stop_words_list = stop_words) {
  set.seed(123)
  df %>% 
    unnest_tokens(word, text) %>% 
    anti_join(stop_words_list) %>% 
    add_count(word) %>% 
    filter(n > stats::quantile(n, counts_quantile)) %>% 
    pairwise_cor(word, page, sort = TRUE) %>% 
    filter(correlation > correlation_threshold,
         !str_detect(item1, "\\d"),
         !str_detect(item2, "\\d")) %>% 
    graph_from_data_frame() %>%
    ggraph(layout = "fr") +
    geom_edge_link(aes(edge_alpha = correlation), show.legend = FALSE) +
    geom_node_point(color = "lightblue", size = 5) +
    geom_node_text(aes(label = name), repel = TRUE) +
    theme_void() -> p
  
  return(p)
}
```

```{r fig.width=12}
bjp_content %>% 
  plot_common_correlated_words(stop_words_list = custom_stop_words,
                               counts_quantile = 0.85) + 
  labs(x = "",
       y = "",
       title = "Commonly Occurring Correlated Words in BJP's Manifesto",
       subtitle = "Per page correlation higher than 0.25",
       caption = "Based on election 2019 manifesto from bjp.org") -> p_bjp

congress_content %>% 
  plot_common_correlated_words(stop_words_list = custom_stop_words,
                               counts_quantile = 0.7) + 
  labs(x = "",
       y = "",
       title = "Commonly Occurring Correlated Words in Congress's Manifesto",
       subtitle = "Per page correlation higher than 0.25",
       caption = "Based on election 2019 manifesto from inc.in") -> p_congress

grid.arrange(p_bjp, p_congress, ncol = 2, widths = c(12,12))
```

## Basic Search Engine

Lets build a cosine-similarity based simple search engine (instead of the basic keyword-based search that comes with the pdf document), in order to make these documents more easily searchable and gain context using most related lines in the manifestos for a given query. 
Using python's scikit-learn for this.

```{python}
from sklearn.feature_extraction.text import TfidfVectorizer, ENGLISH_STOP_WORDS
from sklearn.metrics.pairwise import linear_kernel

stopwords = ENGLISH_STOP_WORDS

vectorizer_bjp = TfidfVectorizer(analyzer='word', stop_words=stopwords, max_df=0.3, min_df=2)
vector_train_bjp = vectorizer_bjp.fit_transform(r["bjp_content$text"])

vectorizer_congress = TfidfVectorizer(analyzer='word', stop_words=stopwords, max_df=0.3, min_df=2)
vector_train_congress = vectorizer_congress.fit_transform(r["congress_content$text"])

def get_related_lines(query, party="bjp"):
  if (party == "bjp"):
    vectorizer = vectorizer_bjp
    vector_train = vector_train_bjp
  else:
    vectorizer = vectorizer_congress
    vector_train = vector_train_congress
  vector_query = vectorizer.transform([query])
  cosine_sim = linear_kernel(vector_query, vector_train).flatten()
  return cosine_sim.argsort()[:-10:-1]
```

```{r}
get_related_lines <- py_to_r(py$get_related_lines)
```

### Common Popular Words with both BJP & Congress

As we see from the plot above, one of the most popular words in both BJP and Congress' manifesto for Employment and Opportunities is "electricity". Lets see, what each of them have planned for that. First, BJP.

```{r}
bjp_content %>% 
  slice(get_related_lines("electricity", party = "bjp")) %>% 
  select(text, page, line)
```

This is the excerpt that we find from page 22, as we dug up based on above results - 

> Now, we will work towards:  
 - Ensuring a right mix of energy which leads towards a cleaner environment.  
 - Supplying quality electricity to all consumers.  
 - Making the state electricity entities financially sound and administratively more efficient.  

Now, Congress.

```{r}
congress_content %>% 
  slice(get_related_lines("electricity", party = "congress")) %>% 
  select(text, page, line)
```

One of the full excerpts from page 8 related to above results - 

> Congress promises to enhance availability of, and access to, electricity in rural areas by encour- aging investment in off-grid renewable power generation with ownership and revenues vesting in local bodies. Every village and every home will be electrified in the true sense. In the long term, we aim to substitute LPG used in homes by electricity and solar energy.

### Unique popular words with BJP & Congress

One of the popular words that seems curious from BJP's manifesto is "youth". Let's see what BJP has planned for the youth employment opportunities.

```{r}
bjp_content %>% 
  slice(get_related_lines("youth", party = "bjp")) %>% 
  select(text, page, line)
```

An excerpt from BJP's manifesto about youth employment opportunities as identified from above -  

> We will incentivise and reward self-organized groups of youth who adopt social assets like schools, hospitals, lakes, public gardens etc. and ensure their maintenance and cleanliness to encourage greater civic engagement of the youth.

Now, one of the popular words that seems curious from Congress' manifesto is "tourism". 

```{r}
congress_content %>% 
  slice(get_related_lines("tourism", party = "congress")) %>% 
  select(text, page, line)
```

> Tourism creates jobs. Congress promises an ade- quately capitalised Tourism Development Bank to provide low-cost, long-term funds for invest- ment in tourism-related businesses. We will also offer lower rates of corporate and personal income tax on tourism-related business income.

A surprisingly large amount of mention of the word "business"/"businesses" in this section of Congress' manifesto.

With all the above analysis, we have developed some idea about the Employment and Opportunities plans of the 2 parties. In the next post, I'll do a similar analysis for Anti-Corruption and Good Governance proposals by them.  

Stay Tuned!

# References  

 - [Part 2 - Economic Growth](/2019/05/india-elections-2019-bjp-congress-manifestos-analysis-part2-economic-growth/)  
 - [Part 4 - Anti-Corruption and Good Governance](/2019/05/india-elections-2019-bjp-congress-manifestos-analysis-part-4-anti-corruption-and-good-governance/)
 - For all the parts go to Project Summary Page - [India General Elections 2019 Analysis ](/2019/05/india-general-elections-2019-analysis/)

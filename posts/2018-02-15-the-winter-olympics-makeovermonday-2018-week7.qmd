---
title: 'The Winter Olympics: MakeOverMonday 2018 Week7'
author: Aditya Mangal
date: '2018-02-15'
categories:
- MakeOverMonday
keywords:
- tech
- DataAnalysis
- DataScience
- MakeOverMonday
- Olympics
- Visualizations
- R
summary: Goal of this Visualization task is to create an alternative visualization
  to the [Tableau's visualization for Winter Olympics data for different countries.](https://public.tableau.com/views/TheWinterOlympics/TheWinterOlympics?:embed=y&:showVizHome=no)
readingtime: '5'
coverImage: https://lh3.googleusercontent.com/JsmscZd_PHexzN7qIiIyGKMwqBV0KzMlx5LoQv1p_FE__Me-L20m3JoaJaJeN01JElIYeXdwLcogFKAHPUhFOlXDcjJQpFT7ulAIP7uFgwJ5vczVsLKcxednTuisE3WYDM_V-WGR63huo4HWr9t8-N2_ayXcFAJ5OD4N70XTV983rsxs-PUryxCDmHjFQpGDlkIBF9w_maXIis-HYnxFxJDl7BU2f6h_UOJguug3kwlkkc0DHsTXtG1eQU8z6yuWl1KU1N9Y79MDif2LHE32dk2efds5L6IICOMEbCIX789knem_T6MiKtatUL4GwZvE2yygRQunMlMjHBiKcZibkV6xFwUEty1x5_98gS1yQmg312wLNas6E_CO1F-0uI3dR_UleklXIzJwIAh_4vje1_1TrQsmTcjSk1ioYB1xqg3vQiwI25TaQeth6y64OytrJkliJxJIYM_vXhsk9NAzrSqfpjMb_9mC_R9bE3NuIJpNTKqQ_JShr3Z-u3Zxbc8ySlJttp9ewZ9jbG9jHvib4FEP0y67LK45p-rlwslXCOlDwzV__9rjz-VcN3_Kx0vmh0gaORjiTClg4WO7zjhPBo0kCtzHlJmtmWTHZPPdFlTRKJg8BCDdvGWgmh8m0EiVqekNEUZ7U98Zwalzr8s97Mf8cPYcT3E1=w3270-h1834-no
thumbnailImage: https://lh3.googleusercontent.com/rH18DMGKl5FY_Oh9o6WIoCTt7bDkkwghTNZGDjX6WhqkiUkm8ZWDg5ZvbkQLmNVjPZwZ2ksaKnjAYR2bPiWkLkdhLTN5dLsKfoHNr4Qf6HhDGhVey6eb2hCCiipxs_IUyBewU4QudW7mtj8iNIiYWzp0L_My0ZfgFBAnV1dU5vKVVMm8JEZDzncNX_xuijhjc54OHlvJT7TOZ8Qkh-aG95OPVCWG2vCYN2HaSCC8jUXJ9iYvYam3GmFQ8fQs7kKRLCpRkQgNAvb0STu-5J1KVC3EIrrSIZEkwGCzlQb5E4ZbT2d3mEw8Mo921nq9CG6TvvFMQpKHdXbszn9tBFv25CjnPLwLJ_G1DNc_CbCcbNslhcJSnAvbJKGUPSTu8JHTBpx1NY25I-p5UcA-3pXl50vM4f2Jggcih-Urtr2DXOjpMqWIlwEHcETQ6VbUAQY4aIE71O-WWkJhxekBvIbc28dLE8NP7o7QwnPho6SVdwNuy7milDhI8mL_6FlQ0lDFrEHGdnK03vayfMsv3PWRrsondkCsyHYpW1a5ER9_3MdHTIn57ZdkpNY0eXYICp-3sg_-BSlZSYnWzVdJys7LXMcu4P5zAJXkKQzgEg17Byr_6gyJYDYbb4S1lnoZB4xAKkDxwV_-CWBCc3M6NV1i8MwWEJeS_GCR=w750-h420-no
thumbnailImagePosition: left
coverCaption: Photo by Willem De Meyer on Unsplash
format:
  html:
    theme: distill
freeze: true
output-file: the-winter-olympics-makeovermonday-2018-week7.html
---
# Introduction

Goal of this Visualization task is to create an alternative
visualization to the <a
href="https://public.tableau.com/views/TheWinterOlympics/TheWinterOlympics?:embed=y&amp;:showVizHome=no"
target="_blank">Tableau’s visualization for Winter Olympics data for
different countries</a>

In this blog post, I’m trying to generate a World Choropleth Map showing
the total counts of medals for each country.

# Analysis

## Cleaning up workspace and loading required libraries

<div id="cb1" class="sourceCode">

``` sourcecode
rm(list = ls())
```

</div>

<div id="cb2" class="sourceCode">

``` sourcecode
library(tidyverse) #Data Wrangling
library(httr)
library(readxl) #Data Ingestion
library(ggplot2) #Data Visualization
library(leaflet)
library(rgeos)
library(rgdal)
library(stringr)
```

</div>

## Obtaining Data

Reading and viewing the dataset

<div id="cb3" class="sourceCode">

``` sourcecode
GET(&quot;https://query.data.world/s/n5nc32oqhtb25hdt3vsa24rd4scs2w&quot;, write_disk(tf &lt;- tempfile(fileext = &quot;.xlsx&quot;)))
```

</div>

<div id="cb4" class="sourceCode">

``` sourcecode
olympics = read_excel(tf)
```

</div>

<div id="cb5" class="sourceCode">

``` sourcecode
olympics
```

</div>

    ## # A tibble: 2,865 x 9
    ##     Year Sport Event Country Gender `Medal Rank` Medal `Name of Athlet…
    ##    &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;         &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;           
    ##  1  1924 Bobs… Men&#39;… Switze… Men               1 gold  Switzerland-1   
    ##  2  1924 Bobs… Men&#39;… Britain Men               2 silv… Britain-1       
    ##  3  1924 Bobs… Men&#39;… Belgium Men               3 bron… Belgium-1       
    ##  4  1924 Cros… Men&#39;… Norway  Men               1 gold  Thorleif Haug   
    ##  5  1924 Cros… Men&#39;… Norway  Men               2 silv… Johan GrÃ¸ttums…
    ##  6  1924 Cros… Men&#39;… Finland Men               3 bron… Tapani Niku     
    ##  7  1924 Cros… Men&#39;… Norway  Men               1 gold  Thorleif Haug   
    ##  8  1924 Cros… Men&#39;… Norway  Men               2 silv… Thoralf StrÃ¸ms…
    ##  9  1924 Cros… Men&#39;… Norway  Men               3 bron… Johan GrÃ¸ttums…
    ## 10  1924 Curl… Men&#39;… Britain Men               1 gold  Britain         
    ## # … with 2,855 more rows, and 1 more variable: `Age of Athlete` &lt;dbl&gt;

Summarizing and getting stats to better understand the dataset

<div id="cb7" class="sourceCode">

``` sourcecode
olympics %&gt;% 
  glimpse()
```

</div>

    ## Rows: 2,865
    ## Columns: 9
    ## $ Year                      &lt;dbl&gt; 1924, 1924, 1924, 1924, 1924, 1924, 1924, 1…
    ## $ Sport                     &lt;chr&gt; &quot;Bobsled&quot;, &quot;Bobsled&quot;, &quot;Bobsled&quot;, &quot;Cross-Cou…
    ## $ Event                     &lt;chr&gt; &quot;Men&#39;s Four/Five&quot;, &quot;Men&#39;s Four/Five&quot;, &quot;Men&#39;…
    ## $ Country                   &lt;chr&gt; &quot;Switzerland&quot;, &quot;Britain&quot;, &quot;Belgium&quot;, &quot;Norwa…
    ## $ Gender                    &lt;chr&gt; &quot;Men&quot;, &quot;Men&quot;, &quot;Men&quot;, &quot;Men&quot;, &quot;Men&quot;, &quot;Men&quot;, &quot;…
    ## $ `Medal Rank`              &lt;dbl&gt; 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3…
    ## $ Medal                     &lt;chr&gt; &quot;gold&quot;, &quot;silver&quot;, &quot;bronze&quot;, &quot;gold&quot;, &quot;silver…
    ## $ `Name of Athlete or Team` &lt;chr&gt; &quot;Switzerland-1&quot;, &quot;Britain-1&quot;, &quot;Belgium-1&quot;, …
    ## $ `Age of Athlete`          &lt;dbl&gt; NA, NA, NA, 29, 24, 28, 29, 27, 24, NA, NA,…

<div id="cb9" class="sourceCode">

``` sourcecode
olympics %&gt;% 
  summary()
```

</div>

    ##       Year         Sport              Event             Country         
    ##  Min.   :1924   Length:2865        Length:2865        Length:2865       
    ##  1st Qu.:1972   Class :character   Class :character   Class :character  
    ##  Median :1992   Mode  :character   Mode  :character   Mode  :character  
    ##  Mean   :1986                                                           
    ##  3rd Qu.:2006                                                           
    ##  Max.   :2014                                                           
    ##                                                                         
    ##     Gender            Medal Rank       Medal           Name of Athlete or Team
    ##  Length:2865        Min.   :1.000   Length:2865        Length:2865            
    ##  Class :character   1st Qu.:1.000   Class :character   Class :character       
    ##  Mode  :character   Median :2.000   Mode  :character   Mode  :character       
    ##                     Mean   :1.996                                             
    ##                     3rd Qu.:3.000                                             
    ##                     Max.   :3.000                                             
    ##                                                                               
    ##  Age of Athlete 
    ##  Min.   :14.00  
    ##  1st Qu.:22.00  
    ##  Median :25.00  
    ##  Mean   :25.15  
    ##  3rd Qu.:28.00  
    ##  Max.   :42.00  
    ##  NA&#39;s   :692

## Scrubbing data

As per the dataset requirement, East and West Germany are to be grouped
with Germany and Soviet Union and the 1992 Unified Team needs to be
combined with Russia

<div id="cb11" class="sourceCode">

``` sourcecode
olympics = olympics %&gt;% 
  mutate(Country = recode(Country, &quot;Soviet Union&quot; = &quot;Russia&quot;, &quot;Unified Team&quot; = &quot;Russia&quot;,
                          &quot;East Germany&quot; = &quot;Germany&quot;, &quot;West Germany&quot; = &quot;Germany&quot;))
```

</div>

Reading in the ISO-3166 country codes dataset in order to generate the
choropleth

<div id="cb12" class="sourceCode">

``` sourcecode
countryCodes = read_csv(&quot;https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv&quot;)
```

</div>

<div id="cb13" class="sourceCode">

``` sourcecode
countryCodes
```

</div>

    ## # A tibble: 249 x 11
    ##    name  `alpha-2` `alpha-3` `country-code` `iso_3166-2` region `sub-region`
    ##    &lt;chr&gt; &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;          &lt;chr&gt;        &lt;chr&gt;  &lt;chr&gt;       
    ##  1 Afgh… AF        AFG       004            ISO 3166-2:… Asia   Southern As…
    ##  2 Ålan… AX        ALA       248            ISO 3166-2:… Europe Northern Eu…
    ##  3 Alba… AL        ALB       008            ISO 3166-2:… Europe Southern Eu…
    ##  4 Alge… DZ        DZA       012            ISO 3166-2:… Africa Northern Af…
    ##  5 Amer… AS        ASM       016            ISO 3166-2:… Ocean… Polynesia   
    ##  6 Ando… AD        AND       020            ISO 3166-2:… Europe Southern Eu…
    ##  7 Ango… AO        AGO       024            ISO 3166-2:… Africa Sub-Saharan…
    ##  8 Angu… AI        AIA       660            ISO 3166-2:… Ameri… Latin Ameri…
    ##  9 Anta… AQ        ATA       010            ISO 3166-2:… &lt;NA&gt;   &lt;NA&gt;        
    ## 10 Anti… AG        ATG       028            ISO 3166-2:… Ameri… Latin Ameri…
    ## # … with 239 more rows, and 4 more variables: `intermediate-region` &lt;chr&gt;,
    ## #   `region-code` &lt;chr&gt;, `sub-region-code` &lt;chr&gt;,
    ## #   `intermediate-region-code` &lt;chr&gt;

Joining the 2 datasets and verifying if any country name mismatch
happening in the 2.

<div id="cb15" class="sourceCode">

``` sourcecode
olympics %&gt;% 
  left_join(countryCodes, by=c(&quot;Country&quot; = &quot;name&quot;)) %&gt;% 
  filter(is.na(`alpha-3`)) %&gt;% 
  select(Country) %&gt;% 
  unique()
```

</div>

    ## # A tibble: 8 x 1
    ##   Country       
    ##   &lt;chr&gt;         
    ## 1 Britain       
    ## 2 United States 
    ## 3 Czechoslovakia
    ## 4 Russia        
    ## 5 North Korea   
    ## 6 Yugoslavia    
    ## 7 South Korea   
    ## 8 Czech Republic

Looks like above 7 countries do not have a corresponding entry in the
countryCodes dataset. Lets try to find out the corresponding names for
each of the 7 in the countryCodes dataset.

<div id="cb17" class="sourceCode">

``` sourcecode
countryCodes %&gt;% 
  filter(str_detect(str_to_lower(name), &quot;britain&quot;)) #United Kingdom of Great Britain and Northern Ireland
```

</div>

    ## # A tibble: 1 x 11
    ##   name  `alpha-2` `alpha-3` `country-code` `iso_3166-2` region `sub-region`
    ##   &lt;chr&gt; &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;          &lt;chr&gt;        &lt;chr&gt;  &lt;chr&gt;       
    ## 1 Unit… GB        GBR       826            ISO 3166-2:… Europe Northern Eu…
    ## # … with 4 more variables: `intermediate-region` &lt;chr&gt;, `region-code` &lt;chr&gt;,
    ## #   `sub-region-code` &lt;chr&gt;, `intermediate-region-code` &lt;chr&gt;

<div id="cb19" class="sourceCode">

``` sourcecode
countryCodes %&gt;% 
  filter(str_detect(str_to_lower(name), &quot;states&quot;)) #United States of America
```

</div>

    ## # A tibble: 3 x 11
    ##   name  `alpha-2` `alpha-3` `country-code` `iso_3166-2` region `sub-region`
    ##   &lt;chr&gt; &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;          &lt;chr&gt;        &lt;chr&gt;  &lt;chr&gt;       
    ## 1 Micr… FM        FSM       583            ISO 3166-2:… Ocean… Micronesia  
    ## 2 Unit… US        USA       840            ISO 3166-2:… Ameri… Northern Am…
    ## 3 Unit… UM        UMI       581            ISO 3166-2:… Ocean… Micronesia  
    ## # … with 4 more variables: `intermediate-region` &lt;chr&gt;, `region-code` &lt;chr&gt;,
    ## #   `sub-region-code` &lt;chr&gt;, `intermediate-region-code` &lt;chr&gt;

<div id="cb21" class="sourceCode">

``` sourcecode
countryCodes %&gt;% 
  filter(str_detect(str_to_lower(name), &quot;czech&quot;)) #Czech Republic
```

</div>

    ## # A tibble: 1 x 11
    ##   name  `alpha-2` `alpha-3` `country-code` `iso_3166-2` region `sub-region`
    ##   &lt;chr&gt; &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;          &lt;chr&gt;        &lt;chr&gt;  &lt;chr&gt;       
    ## 1 Czec… CZ        CZE       203            ISO 3166-2:… Europe Eastern Eur…
    ## # … with 4 more variables: `intermediate-region` &lt;chr&gt;, `region-code` &lt;chr&gt;,
    ## #   `sub-region-code` &lt;chr&gt;, `intermediate-region-code` &lt;chr&gt;

<div id="cb23" class="sourceCode">

``` sourcecode
countryCodes %&gt;% 
  filter(str_detect(str_to_lower(name), &quot;russia&quot;)) #Russian Federation
```

</div>

    ## # A tibble: 1 x 11
    ##   name  `alpha-2` `alpha-3` `country-code` `iso_3166-2` region `sub-region`
    ##   &lt;chr&gt; &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;          &lt;chr&gt;        &lt;chr&gt;  &lt;chr&gt;       
    ## 1 Russ… RU        RUS       643            ISO 3166-2:… Europe Eastern Eur…
    ## # … with 4 more variables: `intermediate-region` &lt;chr&gt;, `region-code` &lt;chr&gt;,
    ## #   `sub-region-code` &lt;chr&gt;, `intermediate-region-code` &lt;chr&gt;

<div id="cb25" class="sourceCode">

``` sourcecode
countryCodes %&gt;% 
  filter(str_detect(str_to_lower(name), &quot;korea&quot;)) #Korea (Democratic People&#39;s Republic of) = North Korea, Korea (Republic of) = South Korea
```

</div>

    ## # A tibble: 2 x 11
    ##   name  `alpha-2` `alpha-3` `country-code` `iso_3166-2` region `sub-region`
    ##   &lt;chr&gt; &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;          &lt;chr&gt;        &lt;chr&gt;  &lt;chr&gt;       
    ## 1 Kore… KP        PRK       408            ISO 3166-2:… Asia   Eastern Asia
    ## 2 Kore… KR        KOR       410            ISO 3166-2:… Asia   Eastern Asia
    ## # … with 4 more variables: `intermediate-region` &lt;chr&gt;, `region-code` &lt;chr&gt;,
    ## #   `sub-region-code` &lt;chr&gt;, `intermediate-region-code` &lt;chr&gt;

<div id="cb27" class="sourceCode">

``` sourcecode
countryCodes %&gt;% 
  filter(str_detect(str_to_lower(name), &quot;yugo&quot;)) #Macedonia (the former Yugoslav Republic of)
```

</div>

    ## # A tibble: 0 x 11
    ## # … with 11 variables: name &lt;chr&gt;, `alpha-2` &lt;chr&gt;, `alpha-3` &lt;chr&gt;,
    ## #   `country-code` &lt;chr&gt;, `iso_3166-2` &lt;chr&gt;, region &lt;chr&gt;, `sub-region` &lt;chr&gt;,
    ## #   `intermediate-region` &lt;chr&gt;, `region-code` &lt;chr&gt;, `sub-region-code` &lt;chr&gt;,
    ## #   `intermediate-region-code` &lt;chr&gt;

Renaming mismatched countries in olympic dataset based on countryCodes
dataset.

<div id="cb29" class="sourceCode">

``` sourcecode
olympics = olympics %&gt;% 
  mutate(Country = recode(Country,
                          &quot;Britain&quot; = &quot;United Kingdom of Great Britain and Northern Ireland&quot;,
                          &quot;United States&quot; = &quot;United States of America&quot;,
                          &quot;Czechoslovakia&quot; = &quot;Czech Republic&quot;,
                          &quot;Russia&quot; = &quot;Russian Federation&quot;,
                          &quot;North Korea&quot; = &quot;Korea (Democratic People&#39;s Republic of)&quot;,
                          &quot;South Korea&quot; = &quot;Korea (Republic of)&quot;,
                          &quot;Yugoslavia&quot; = &quot;Macedonia (the former Yugoslav Republic of)&quot;))
```

</div>

Joining and viewing the 2 datasets

<div id="cb30" class="sourceCode">

``` sourcecode
olympics = olympics %&gt;% 
  left_join(countryCodes, by=c(&quot;Country&quot; = &quot;name&quot;))
olympics
```

</div>

    ## # A tibble: 2,865 x 19
    ##     Year Sport Event Country Gender `Medal Rank` Medal `Name of Athlet…
    ##    &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;         &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;           
    ##  1  1924 Bobs… Men&#39;… Switze… Men               1 gold  Switzerland-1   
    ##  2  1924 Bobs… Men&#39;… United… Men               2 silv… Britain-1       
    ##  3  1924 Bobs… Men&#39;… Belgium Men               3 bron… Belgium-1       
    ##  4  1924 Cros… Men&#39;… Norway  Men               1 gold  Thorleif Haug   
    ##  5  1924 Cros… Men&#39;… Norway  Men               2 silv… Johan GrÃ¸ttums…
    ##  6  1924 Cros… Men&#39;… Finland Men               3 bron… Tapani Niku     
    ##  7  1924 Cros… Men&#39;… Norway  Men               1 gold  Thorleif Haug   
    ##  8  1924 Cros… Men&#39;… Norway  Men               2 silv… Thoralf StrÃ¸ms…
    ##  9  1924 Cros… Men&#39;… Norway  Men               3 bron… Johan GrÃ¸ttums…
    ## 10  1924 Curl… Men&#39;… United… Men               1 gold  Britain         
    ## # … with 2,855 more rows, and 11 more variables: `Age of Athlete` &lt;dbl&gt;,
    ## #   `alpha-2` &lt;chr&gt;, `alpha-3` &lt;chr&gt;, `country-code` &lt;chr&gt;, `iso_3166-2` &lt;chr&gt;,
    ## #   region &lt;chr&gt;, `sub-region` &lt;chr&gt;, `intermediate-region` &lt;chr&gt;,
    ## #   `region-code` &lt;chr&gt;, `sub-region-code` &lt;chr&gt;,
    ## #   `intermediate-region-code` &lt;chr&gt;

Aggregating per country to find the total number of medals for each
country and its corresponding alpha-3 code.

<div id="cb32" class="sourceCode">

``` sourcecode
TotalMedalsPerCountry = olympics %&gt;% 
  group_by(Country, `alpha-3`) %&gt;% 
  summarise(TotalMedals = n()) %&gt;% 
  rename(Code = `alpha-3`)
TotalMedalsPerCountry
```

</div>

    ## # A tibble: 39 x 3
    ##    Country        Code  TotalMedals
    ##    &lt;chr&gt;          &lt;chr&gt;       &lt;int&gt;
    ##  1 Australia      AUS            12
    ##  2 Austria        AUT           218
    ##  3 Belarus        BLR            15
    ##  4 Belgium        BEL             5
    ##  5 Bulgaria       BGR             6
    ##  6 Canada         CAN           170
    ##  7 China          CHN            53
    ##  8 Croatia        HRV            11
    ##  9 Czech Republic &lt;NA&gt;           49
    ## 10 Denmark        DNK             1
    ## # … with 29 more rows

Lets see the top countries based on total number of medals

<div id="cb34" class="sourceCode">

``` sourcecode
TotalMedalsPerCountry %&gt;% 
  arrange(desc(TotalMedals))
```

</div>

    ## # A tibble: 39 x 3
    ##    Country                  Code  TotalMedals
    ##    &lt;chr&gt;                    &lt;chr&gt;       &lt;int&gt;
    ##  1 Germany                  DEU           377
    ##  2 Russian Federation       RUS           341
    ##  3 Norway                   NOR           329
    ##  4 United States of America USA           282
    ##  5 Austria                  AUT           218
    ##  6 Canada                   CAN           170
    ##  7 Finland                  FIN           161
    ##  8 Sweden                   SWE           144
    ##  9 Switzerland              CHE           138
    ## 10 Italy                    ITA           114
    ## # … with 29 more rows

Germany obtained the most number of medals (377) closely followed by
Russia with (341)

## Exploring Data

Lets plot the above data on a map using leaflet.

Loading shape file data set from [World Borders
Dataset](http://thematicmapping.org/downloads/world_borders.php).

<div id="cb36" class="sourceCode">

``` sourcecode
shape = readOGR(&quot;~/Downloads/TM_WORLD_BORDERS_SIMPL-0.3/TM_WORLD_BORDERS_SIMPL-0.3.shp&quot;)
```

</div>

    ## OGR data source with driver: ESRI Shapefile 
    ## Source: &quot;/Users/amangal/Downloads/TM_WORLD_BORDERS_SIMPL-0.3/TM_WORLD_BORDERS_SIMPL-0.3.shp&quot;, layer: &quot;TM_WORLD_BORDERS_SIMPL-0.3&quot;
    ## with 246 features
    ## It has 11 fields
    ## Integer64 fields read as strings:  POP2005

<div id="cb38" class="sourceCode">

``` sourcecode
names(shape)
```

</div>

    ##  [1] &quot;FIPS&quot;      &quot;ISO2&quot;      &quot;ISO3&quot;      &quot;UN&quot;        &quot;NAME&quot;      &quot;AREA&quot;     
    ##  [7] &quot;POP2005&quot;   &quot;REGION&quot;    &quot;SUBREGION&quot; &quot;LON&quot;       &quot;LAT&quot;

<div id="cb40" class="sourceCode">

``` sourcecode
TotalMedalsPerCountry = TotalMedalsPerCountry %&gt;% 
  left_join(tbl_df(shape@data), by = c(&quot;Code&quot;=&quot;ISO3&quot;)) %&gt;% 
  na.omit()

TotalMedalsPerCountry = TotalMedalsPerCountry %&gt;% 
  mutate(label = str_c(sep = &quot; - &quot;, NAME, &quot;TotalMedals&quot;, TotalMedals))
```

</div>

<div id="cb41" class="sourceCode">

``` sourcecode
bins = c(0, 10, 20, 30, 50, 100, 150, 200, 300, Inf)
pal = colorBin(&quot;RdYlGn&quot;, domain = TotalMedalsPerCountry$TotalMedals, bins = bins)

TotalMedalsPerCountry %&gt;% 
  leaflet() %&gt;% 
  addTiles() %&gt;% 
  setView(53.019815, 1.369002, zoom = 1) %&gt;% 
  addCircles(~LON, ~LAT, label = ~label, color = ~pal(TotalMedals), weight = 10)
```

</div>

<div id="htmlwidget-1" class="leaflet html-widget"
style="width:672px;height:480px;">

</div>

As can be clearly seen above, Norway and USA closely followed in the
total medals ranking. Visualizing data on a map can provide a clear view
of the overall data.
